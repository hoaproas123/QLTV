/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms    @Override
    public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public Insets getBorderInsets(Component c) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public boolean isBorderOpaque() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
/JFrame.java to edit this template
 */
package UI;


import java.awt.Image;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import DB.DbQuery;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author Admin
 */
public class QuanLyKhachHang extends javax.swing.JFrame{

    /**
     * Creates new form DangNhap
     */
    private final ImageIcon img_Back;
    private final String role=DangNhap.Role;
    private DefaultTableModel tbModel;
    private final DbQuery dbqr=new DbQuery();
    private ResultSet rs;
    private String dialog_Opened="";
    private final String username=DangNhap.Username;
    private static final Logger logger = Setting.SettingUI.logger;

    public QuanLyKhachHang() {
        img_Back=new ImageIcon(new ImageIcon(getClass().getResource("/Image/backicon.png")).getImage().getScaledInstance(45, 25, Image.SCALE_SMOOTH));
        initComponents();
        setRole(role);
        load_Table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame_TimKiem_dialog = new javax.swing.JFrame();
        jPanel_TimKiemBox = new javax.swing.JPanel();
        jTextField_TimKiemBox_searchString = new javax.swing.JTextField();
        btn_TimKiemBox_search = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_TimKiemBox_close = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        jComboBox_TimKiemBox_item = new javax.swing.JComboBox<>();
        jFrame_SapXep_dialog = new javax.swing.JFrame();
        jPanel_SapXepBox = new javax.swing.JPanel();
        btn_SapXepBox_Ok = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_SapXepBox_close = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        jComboBox_SapXepBox_option1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBox_SapXepBox_option2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jFrame_ChiTiet_dialog = new javax.swing.JFrame();
        jPanel_ChiTietBox = new javax.swing.JPanel();
        btn_ChiTietBox_close = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        jScrollPane_ChiTietBox_Content = new javax.swing.JScrollPane();
        jTextPane_ChiTietBox_SachMuon = new javax.swing.JTextPane();
        jScrollPane_ChiTietBox_Content1 = new javax.swing.JScrollPane();
        jTextPane_ChiTietBox_KhachHang = new javax.swing.JTextPane();
        jFrame_CapNhatThem_dialog = new javax.swing.JFrame();
        jPanel_CapNhatThemBox = new javax.swing.JPanel();
        btn_CapNhatThemBox_CapNhat = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_CapNhatThemBox_close = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        jTextField_CapNhatThemBox_SDT = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField_CapNhatThemBox_HoTen = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField_CapNhatThemBox_Tuoi = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btn_CapNhatThemBox_Them = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        jPanel_ChucNang_main = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_TimKiem = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_SapXep = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_Them = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_ChiTiet = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_Xoa = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_CapNhat = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        jLabel_mainTittle = new javax.swing.JLabel();
        btn_back = new javax.swing.JButton();

        jFrame_TimKiem_dialog.setLocation(Setting.SettingUI.dialog_Location);
        jFrame_TimKiem_dialog.setMinimumSize(new java.awt.Dimension(466, 143));
        jFrame_TimKiem_dialog.setUndecorated(true);
        jFrame_TimKiem_dialog.setResizable(false);

        jPanel_TimKiemBox.setBackground(new java.awt.Color(255, 138, 20));
        jPanel_TimKiemBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jTextField_TimKiemBox_searchString.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        btn_TimKiemBox_search.setBackground(new java.awt.Color(250, 215, 172));
        btn_TimKiemBox_search.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btn_TimKiemBox_search.setText("Tìm");
        btn_TimKiemBox_search.setBorderPainted(false);
        btn_TimKiemBox_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiemBox_searchActionPerformed(evt);
            }
        });

        btn_TimKiemBox_close.setBackground(new java.awt.Color(250, 215, 172));
        btn_TimKiemBox_close.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btn_TimKiemBox_close.setText("Đóng");
        btn_TimKiemBox_close.setBorderPainted(false);
        btn_TimKiemBox_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiemBox_closeActionPerformed(evt);
            }
        });

        jComboBox_TimKiemBox_item.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox_TimKiemBox_item.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Số điện thoại", "Họ Tên", "Tuổi" }));

        javax.swing.GroupLayout jPanel_TimKiemBoxLayout = new javax.swing.GroupLayout(jPanel_TimKiemBox);
        jPanel_TimKiemBox.setLayout(jPanel_TimKiemBoxLayout);
        jPanel_TimKiemBoxLayout.setHorizontalGroup(
            jPanel_TimKiemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TimKiemBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox_TimKiemBox_item, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField_TimKiemBox_searchString)
                .addGap(24, 24, 24))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TimKiemBoxLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(btn_TimKiemBox_close, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(btn_TimKiemBox_search, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );
        jPanel_TimKiemBoxLayout.setVerticalGroup(
            jPanel_TimKiemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TimKiemBoxLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel_TimKiemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_TimKiemBox_searchString, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(jComboBox_TimKiemBox_item))
                .addGap(18, 18, 18)
                .addGroup(jPanel_TimKiemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_TimKiemBox_search, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_TimKiemBox_close, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jFrame_TimKiem_dialogLayout = new javax.swing.GroupLayout(jFrame_TimKiem_dialog.getContentPane());
        jFrame_TimKiem_dialog.getContentPane().setLayout(jFrame_TimKiem_dialogLayout);
        jFrame_TimKiem_dialogLayout.setHorizontalGroup(
            jFrame_TimKiem_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_TimKiemBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame_TimKiem_dialogLayout.setVerticalGroup(
            jFrame_TimKiem_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_TimKiemBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jFrame_SapXep_dialog.setLocation(Setting.SettingUI.dialog_Location);
        jFrame_SapXep_dialog.setMinimumSize(new java.awt.Dimension(466, 196));
        jFrame_SapXep_dialog.setUndecorated(true);

        jPanel_SapXepBox.setBackground(new java.awt.Color(255, 138, 20));
        jPanel_SapXepBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btn_SapXepBox_Ok.setBackground(new java.awt.Color(250, 215, 172));
        btn_SapXepBox_Ok.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btn_SapXepBox_Ok.setText("Ok");
        btn_SapXepBox_Ok.setBorderPainted(false);
        btn_SapXepBox_Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SapXepBox_OkActionPerformed(evt);
            }
        });

        btn_SapXepBox_close.setBackground(new java.awt.Color(250, 215, 172));
        btn_SapXepBox_close.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btn_SapXepBox_close.setText("Đóng");
        btn_SapXepBox_close.setBorderPainted(false);
        btn_SapXepBox_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SapXepBox_closeActionPerformed(evt);
            }
        });

        jComboBox_SapXepBox_option1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox_SapXepBox_option1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tăng dần", "Giảm dần" }));
        jComboBox_SapXepBox_option1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_SapXepBox_option1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Tăng/Giảm:");

        jComboBox_SapXepBox_option2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox_SapXepBox_option2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Số điện thoại", "Họ Tên", "Tuổi", "Số lần mượn" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Xếp Theo:");

        javax.swing.GroupLayout jPanel_SapXepBoxLayout = new javax.swing.GroupLayout(jPanel_SapXepBox);
        jPanel_SapXepBox.setLayout(jPanel_SapXepBoxLayout);
        jPanel_SapXepBoxLayout.setHorizontalGroup(
            jPanel_SapXepBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_SapXepBoxLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(btn_SapXepBox_close, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_SapXepBox_Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_SapXepBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_SapXepBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_SapXepBoxLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_SapXepBox_option2, 0, 292, Short.MAX_VALUE))
                    .addGroup(jPanel_SapXepBoxLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_SapXepBox_option1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(40, 40, 40))
        );
        jPanel_SapXepBoxLayout.setVerticalGroup(
            jPanel_SapXepBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_SapXepBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_SapXepBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox_SapXepBox_option1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_SapXepBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox_SapXepBox_option2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_SapXepBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_SapXepBox_Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_SapXepBox_close, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jFrame_SapXep_dialogLayout = new javax.swing.GroupLayout(jFrame_SapXep_dialog.getContentPane());
        jFrame_SapXep_dialog.getContentPane().setLayout(jFrame_SapXep_dialogLayout);
        jFrame_SapXep_dialogLayout.setHorizontalGroup(
            jFrame_SapXep_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_SapXepBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame_SapXep_dialogLayout.setVerticalGroup(
            jFrame_SapXep_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_SapXepBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jFrame_ChiTiet_dialog.setLocation(Setting.SettingUI.dialog_Location);
        jFrame_ChiTiet_dialog.setMinimumSize(new java.awt.Dimension(466, 190));
        jFrame_ChiTiet_dialog.setUndecorated(true);

        jPanel_ChiTietBox.setBackground(new java.awt.Color(255, 138, 20));
        jPanel_ChiTietBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel_ChiTietBox.setPreferredSize(new java.awt.Dimension(466, 623));

        btn_ChiTietBox_close.setBackground(new java.awt.Color(250, 215, 172));
        btn_ChiTietBox_close.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btn_ChiTietBox_close.setText("Đóng");
        btn_ChiTietBox_close.setBorderPainted(false);
        btn_ChiTietBox_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ChiTietBox_closeActionPerformed(evt);
            }
        });

        jTextPane_ChiTietBox_SachMuon.setEditable(false);
        // Disable auto-scrolling
        DefaultCaret caret1 = (DefaultCaret) jTextPane_ChiTietBox_SachMuon.getCaret();
        caret1.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);
        jTextPane_ChiTietBox_SachMuon.setBackground(new java.awt.Color(250, 215, 172));
        jTextPane_ChiTietBox_SachMuon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextPane_ChiTietBox_SachMuon.setAutoscrolls(false);
        jTextPane_ChiTietBox_SachMuon.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextPane_ChiTietBox_SachMuon.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextPane_ChiTietBox_SachMuon.setMaximumSize(new java.awt.Dimension(582, 578));
        jTextPane_ChiTietBox_SachMuon.setName(""); // NOI18N
        jScrollPane_ChiTietBox_Content.setViewportView(jTextPane_ChiTietBox_SachMuon);

        jTextPane_ChiTietBox_KhachHang.setEditable(false);
        jTextPane_ChiTietBox_KhachHang.setBackground(new java.awt.Color(250, 215, 172));
        jTextPane_ChiTietBox_KhachHang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextPane_ChiTietBox_KhachHang.setAutoscrolls(false);
        jTextPane_ChiTietBox_KhachHang.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextPane_ChiTietBox_KhachHang.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextPane_ChiTietBox_KhachHang.setMaximumSize(new java.awt.Dimension(582, 578));
        jTextPane_ChiTietBox_KhachHang.setName(""); // NOI18N
        jScrollPane_ChiTietBox_Content1.setViewportView(jTextPane_ChiTietBox_KhachHang);

        javax.swing.GroupLayout jPanel_ChiTietBoxLayout = new javax.swing.GroupLayout(jPanel_ChiTietBox);
        jPanel_ChiTietBox.setLayout(jPanel_ChiTietBoxLayout);
        jPanel_ChiTietBoxLayout.setHorizontalGroup(
            jPanel_ChiTietBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ChiTietBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane_ChiTietBox_Content1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane_ChiTietBox_Content, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel_ChiTietBoxLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(btn_ChiTietBox_close, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_ChiTietBoxLayout.setVerticalGroup(
            jPanel_ChiTietBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ChiTietBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_ChiTietBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane_ChiTietBox_Content1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(jScrollPane_ChiTietBox_Content))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_ChiTietBox_close, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jFrame_ChiTiet_dialogLayout = new javax.swing.GroupLayout(jFrame_ChiTiet_dialog.getContentPane());
        jFrame_ChiTiet_dialog.getContentPane().setLayout(jFrame_ChiTiet_dialogLayout);
        jFrame_ChiTiet_dialogLayout.setHorizontalGroup(
            jFrame_ChiTiet_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_ChiTietBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jFrame_ChiTiet_dialogLayout.setVerticalGroup(
            jFrame_ChiTiet_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_ChiTietBox, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jFrame_CapNhatThem_dialog.setLocation(Setting.SettingUI.dialog_Location);
        jFrame_CapNhatThem_dialog.setMinimumSize(new java.awt.Dimension(466, 264));
        jFrame_CapNhatThem_dialog.setUndecorated(true);

        jPanel_CapNhatThemBox.setBackground(new java.awt.Color(255, 138, 20));
        jPanel_CapNhatThemBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel_CapNhatThemBox.setMaximumSize(new java.awt.Dimension(466, 623));
        jPanel_CapNhatThemBox.setPreferredSize(new java.awt.Dimension(466, 264));

        btn_CapNhatThemBox_CapNhat.setBackground(new java.awt.Color(250, 215, 172));
        btn_CapNhatThemBox_CapNhat.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btn_CapNhatThemBox_CapNhat.setText("Cập Nhật");
        btn_CapNhatThemBox_CapNhat.setBorderPainted(false);
        btn_CapNhatThemBox_CapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhatThemBox_CapNhatActionPerformed(evt);
            }
        });

        btn_CapNhatThemBox_close.setBackground(new java.awt.Color(250, 215, 172));
        btn_CapNhatThemBox_close.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btn_CapNhatThemBox_close.setText("Đóng");
        btn_CapNhatThemBox_close.setBorderPainted(false);
        btn_CapNhatThemBox_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhatThemBox_closeActionPerformed(evt);
            }
        });

        jTextField_CapNhatThemBox_SDT.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField_CapNhatThemBox_SDT.setMaximumSize(new java.awt.Dimension(7, 35));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setText("SDT:");

        jTextField_CapNhatThemBox_HoTen.setColumns(2);
        jTextField_CapNhatThemBox_HoTen.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField_CapNhatThemBox_HoTen.setActionCommand("<Not Set>");
        jTextField_CapNhatThemBox_HoTen.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField_CapNhatThemBox_HoTen.setMaximumSize(new java.awt.Dimension(7, 35));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("Họ Tên:");

        jTextField_CapNhatThemBox_Tuoi.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField_CapNhatThemBox_Tuoi.setMaximumSize(new java.awt.Dimension(7, 35));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel12.setText("Tuổi:");

        btn_CapNhatThemBox_Them.setBackground(new java.awt.Color(250, 215, 172));
        btn_CapNhatThemBox_Them.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btn_CapNhatThemBox_Them.setText("Thêm");
        btn_CapNhatThemBox_Them.setBorderPainted(false);
        btn_CapNhatThemBox_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhatThemBox_ThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_CapNhatThemBoxLayout = new javax.swing.GroupLayout(jPanel_CapNhatThemBox);
        jPanel_CapNhatThemBox.setLayout(jPanel_CapNhatThemBoxLayout);
        jPanel_CapNhatThemBoxLayout.setHorizontalGroup(
            jPanel_CapNhatThemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_CapNhatThemBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_CapNhatThemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_CapNhatThemBoxLayout.createSequentialGroup()
                        .addGroup(jPanel_CapNhatThemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_CapNhatThemBoxLayout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_CapNhatThemBox_Tuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_CapNhatThemBoxLayout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_CapNhatThemBox_HoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_CapNhatThemBoxLayout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_CapNhatThemBox_SDT, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_CapNhatThemBoxLayout.createSequentialGroup()
                        .addComponent(btn_CapNhatThemBox_close, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btn_CapNhatThemBox_CapNhat)
                        .addGap(33, 33, 33)
                        .addComponent(btn_CapNhatThemBox_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
        );
        jPanel_CapNhatThemBoxLayout.setVerticalGroup(
            jPanel_CapNhatThemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_CapNhatThemBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_CapNhatThemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_CapNhatThemBox_SDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addGroup(jPanel_CapNhatThemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_CapNhatThemBox_HoTen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_CapNhatThemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_CapNhatThemBox_Tuoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel_CapNhatThemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_CapNhatThemBox_CapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_CapNhatThemBox_close, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_CapNhatThemBox_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jFrame_CapNhatThem_dialogLayout = new javax.swing.GroupLayout(jFrame_CapNhatThem_dialog.getContentPane());
        jFrame_CapNhatThem_dialog.getContentPane().setLayout(jFrame_CapNhatThem_dialogLayout);
        jFrame_CapNhatThem_dialogLayout.setHorizontalGroup(
            jFrame_CapNhatThem_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_CapNhatThemBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jFrame_CapNhatThem_dialogLayout.setVerticalGroup(
            jFrame_CapNhatThem_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_CapNhatThemBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(600, 300));
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(1063, 623));
        setMinimumSize(new java.awt.Dimension(1063, 623));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1063, 623));
        setResizable(false);

        jPanel_ChucNang_main.setBackground(Setting.SettingUI.UI_colorDefault);
        jPanel_ChucNang_main.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel_ChucNang_main.setToolTipText("");
        jPanel_ChucNang_main.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số điện thoại", "Họ Tên", "Tuổi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setRowHeight(30);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowHorizontalLines(false);
        jTable1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTable1MouseDragged(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btn_TimKiem.setBackground(new java.awt.Color(250, 215, 172));
        btn_TimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_TimKiem.setText("Tìm Kiếm");
        btn_TimKiem.setBorderPainted(false);
        btn_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiemActionPerformed(evt);
            }
        });

        btn_SapXep.setBackground(new java.awt.Color(250, 215, 172));
        btn_SapXep.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_SapXep.setText("Sắp Xếp");
        btn_SapXep.setBorderPainted(false);
        btn_SapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SapXepActionPerformed(evt);
            }
        });

        btn_Them.setBackground(new java.awt.Color(250, 215, 172));
        btn_Them.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_Them.setText("Thêm");
        btn_Them.setBorderPainted(false);
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemActionPerformed(evt);
            }
        });

        btn_ChiTiet.setBackground(new java.awt.Color(250, 215, 172));
        btn_ChiTiet.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_ChiTiet.setText("Chi Tiết");
        btn_ChiTiet.setBorderPainted(false);
        btn_ChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ChiTietActionPerformed(evt);
            }
        });

        btn_Xoa.setBackground(new java.awt.Color(250, 215, 172));
        btn_Xoa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_Xoa.setText("Xóa");
        btn_Xoa.setBorderPainted(false);
        btn_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaActionPerformed(evt);
            }
        });

        btn_CapNhat.setBackground(new java.awt.Color(250, 215, 172));
        btn_CapNhat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_CapNhat.setText("Cập Nhật");
        btn_CapNhat.setBorderPainted(false);
        btn_CapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhatActionPerformed(evt);
            }
        });

        jLabel_mainTittle.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel_mainTittle.setText("Quản Lý Khách Hàng");

        btn_back.setBackground(new java.awt.Color(250, 215, 172));
        btn_back.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_back.setIcon(img_Back);
        btn_back.setBorderPainted(false);
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_ChucNang_mainLayout = new javax.swing.GroupLayout(jPanel_ChucNang_main);
        jPanel_ChucNang_main.setLayout(jPanel_ChucNang_mainLayout);
        jPanel_ChucNang_mainLayout.setHorizontalGroup(
            jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ChucNang_mainLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 892, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_TimKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_ChiTiet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_Them, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_CapNhat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_Xoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_SapXep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ChucNang_mainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_mainTittle)
                .addGap(399, 399, 399))
            .addGroup(jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_ChucNang_mainLayout.createSequentialGroup()
                    .addGap(892, 892, 892)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(169, Short.MAX_VALUE)))
            .addGroup(jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 1061, Short.MAX_VALUE))
        );
        jPanel_ChucNang_mainLayout.setVerticalGroup(
            jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel_ChucNang_mainLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_mainTittle)
                    .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_ChucNang_mainLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(btn_TimKiem)
                .addGap(31, 31, 31)
                .addComponent(btn_SapXep)
                .addGap(31, 31, 31)
                .addComponent(btn_ChiTiet)
                .addGap(32, 32, 32)
                .addComponent(btn_Them)
                .addGap(31, 31, 31)
                .addComponent(btn_CapNhat)
                .addGap(31, 31, 31)
                .addComponent(btn_Xoa)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ChucNang_mainLayout.createSequentialGroup()
                    .addGap(0, 75, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ChucNang_mainLayout.createSequentialGroup()
                    .addContainerGap(75, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(542, 542, 542)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_ChucNang_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_ChucNang_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("");

        setSize(new java.awt.Dimension(1063, 621));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

/**
 * Phương thức này thực hiện việc tải dữ liệu từ cơ sở dữ liệu và hiển thị nó trong bảng.
 * Dữ liệu được lấy dựa trên các thông tin nhập từ các thành phần giao diện như combobox và textbox.
 * 
 * @throws SQLException Nếu có lỗi xảy ra trong quá trình truy vấn cơ sở dữ liệu.
 */
    private void load_Table()
    {
        if(tbModel!=null)
            tbModel.setRowCount(0);
        // Lấy thông tin từ các thành phần giao diện
        String typeSearch = convertToDbString(jComboBox_TimKiemBox_item.getItemAt(jComboBox_TimKiemBox_item.getSelectedIndex()));
        String searchString = jTextField_TimKiemBox_searchString.getText();
        String typeOrder = convertToDbString(jComboBox_SapXepBox_option2.getItemAt(jComboBox_SapXepBox_option2.getSelectedIndex()));
        String typeString = convertToDbString(jComboBox_SapXepBox_option1.getItemAt(jComboBox_SapXepBox_option1.getSelectedIndex()));
        try {
            // Thực hiện truy vấn cơ sở dữ liệu
            rs = dbqr.ExcuQuery_GetTable("KHACHHANG",
                    typeSearch + " like N'%" + searchString + "%'",
                    typeOrder + " " + typeString);

            // Hiển thị dữ liệu trong bảng
            tbModel = (DefaultTableModel) jTable1.getModel();
            while (rs.next()) {
                String Data[] = {rs.getString(1), rs.getString(2), rs.getString(3)};
                tbModel.addRow(Data);
            }
            logger.log(Level.INFO, " Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 xem danh s\u00e1ch kh\u00e1ch h\u00e0ng\n", username);
            
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
// btn chức năng
    private void btn_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiemActionPerformed
        // TODO add your handling code here:
        animation_OpenDialog();
        btn_TimKiem.setBackground(Setting.SettingUI.btn_colorChange);
        jFrame_TimKiem_dialog.setVisible(true);
        dialog_Opened="timkiem";
        logger.log(Level.INFO, "Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 s\u1eed d\u1ee5ng ch\u1ee9c n\u0103ng t\u00ecm ki\u1ebfm kh\u00e1ch h\u00e0ng\n", username);
    }//GEN-LAST:event_btn_TimKiemActionPerformed

    private void btn_SapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SapXepActionPerformed
        // TODO add your handling code here:
        animation_OpenDialog();
        btn_SapXep.setBackground(Setting.SettingUI.btn_colorChange);
        jFrame_SapXep_dialog.setVisible(true);    
        dialog_Opened="sapxep";
        logger.log(Level.INFO, "Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 s\u1eed d\u1ee5ng ch\u1ee9c n\u0103ng s\u1eafp x\u1ebfp\n", username);
    }//GEN-LAST:event_btn_SapXepActionPerformed

    private void btn_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemActionPerformed
        // TODO add your handling code here:
        animation_OpenDialog();
        btn_Them.setBackground(Setting.SettingUI.btn_colorChange);
        jTextField_CapNhatThemBox_SDT.setText("");
        jTextField_CapNhatThemBox_HoTen.setText("");
        jTextField_CapNhatThemBox_Tuoi.setText("");   
        jFrame_CapNhatThem_dialog.setVisible(true);  
        dialog_Opened="them";  
        logger.log(Level.INFO, "Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 s\u1eed d\u1ee5ng ch\u1ee9c n\u0103ng th\u00eam kh\u00e1ch h\u00e0ng\n", username);
    }//GEN-LAST:event_btn_ThemActionPerformed

    private void btn_ChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ChiTietActionPerformed
        // TODO add your handling code here:
        animation_OpenDialog();
        btn_ChiTiet.setBackground(Setting.SettingUI.btn_colorChange);
        jFrame_ChiTiet_dialog.setVisible(true);
        dialog_Opened="chitiet";
        logger.log(Level.INFO, "Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 s\u1eed d\u1ee5ng ch\u1ee9c n\u0103ng xem th\u00f4ng tin chi ti\u1ebft kh\u00e1ch h\u00e0ng\n", username);
    }//GEN-LAST:event_btn_ChiTietActionPerformed

    private void btn_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaActionPerformed
        // TODO add your handling code here:
        close_Dialog();
        this.setLocation(Setting.SettingUI.mainScreen_Location_Center);
        btn_Xoa.setBackground(Setting.SettingUI.btn_colorChange);
        dialog_Opened="xoa";
        if( jTable1.getSelectedRowCount()==1)
        {   
            tbModel=(DefaultTableModel)jTable1.getModel();
            String SDT=(String)tbModel.getValueAt(jTable1.getSelectedRow(), 0);
            int choice =JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa khách hàng "+SDT +"?", "Xác nhận xóa",2);
            if(choice==0){
                ResultSet hdm=dbqr.ExcuQuery_GetRow("HOADONMUON", "SDT='"+SDT+"'");
                try {
                    if(hdm.next()==false)
                    {
                        dbqr.ExcuQuery_Delete("KHACHHANG","SDT= '"+SDT+"'");
                        JOptionPane.showMessageDialog(null, "Xóa thành công!","Thông báo",1);
                        load_Table();
                        logger.log(Level.INFO, " Người dùng "+username+" \u0111\u00e3 x\u00f3a kh\u00e1ch h\u00e0ng {0}\n", SDT);
                    }
                    else{
                        // Mảng các lựa chọn
                        Object[] options = {"Hủy", "Vẫn Xóa"};

                        // Hiển thị hộp thoại tùy chọn
                        int selectedOption = JOptionPane.showOptionDialog(
                                null,                         // Parent component (null để trung tâm trên màn hình)
                                "Khách Hàng có trong dữ liệu hóa đơn, không thể xóa!",         // Nội dung hộp thoại
                                "Thông báo",         // Tiêu đề hộp thoại
                                JOptionPane.DEFAULT_OPTION,  // Kiểu hộp thoại
                                JOptionPane.WARNING_MESSAGE, // Kiểu thông điệp
                                null,                         // Icon (null để sử dụng icon mặc định)
                                options,                      // Mảng các lựa chọn
                                options[0]);                  // Lựa chọn mặc định

                        // Xử lý lựa chọn
                        if (selectedOption == 1) {
                            int ID=hdm.getInt(1);
                            int select=JOptionPane.showConfirmDialog(null, "Thông tin hóa đơn trả và hóa đơn mượn cũng sẽ bị xóa ,Bạn vẫn muốn xóa?","Cảnh báo",JOptionPane.OK_CANCEL_OPTION,0);
                            if(select==JOptionPane.OK_OPTION)
                            {
                                dbqr.ExcuQuery_Delete("HOADONTRA", "Id="+ID);
                                dbqr.ExcuQuery_Delete("HOADONMUON", "Id="+ID);
                                while(hdm.next()){    
                                    ID=hdm.getInt(1);
                                    dbqr.ExcuQuery_Delete("HOADONTRA", "Id="+ID);
                                    dbqr.ExcuQuery_Delete("HOADONMUON", "Id="+ID);
                                }
                                dbqr.ExcuQuery_Delete("KHACHHANG","SDT= '"+SDT+"'");
                                JOptionPane.showMessageDialog(null, "Xóa thành công!","Thông báo",1);
                                load_Table();
                                logger.log(Level.INFO, " Người dùng "+username+" \u0111\u00e3 x\u00f3a kh\u00e1ch h\u00e0ng {0}\n", SDT);
                                
                            }
                            else{}
                        } else {
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(QuanLyKhachHang.class.getName()).log(Level.SEVERE, null, ex); 
                }
                
            }
            
        }
        else JOptionPane.showMessageDialog(null, "Chọn dòng để xóa!","Thông báo",2);
    }//GEN-LAST:event_btn_XoaActionPerformed

    private void btn_CapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapNhatActionPerformed
        // TODO add your handling code here:
        animation_OpenDialog();
        btn_CapNhat.setBackground(Setting.SettingUI.btn_colorChange);
        jFrame_CapNhatThem_dialog.setVisible(true);  
        dialog_Opened="capnhat";
        logger.log(Level.INFO, " Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 d\u00f9ng ch\u1ee9c n\u0103ng c\u1eadp nh\u1eadt\n", username);

    }//GEN-LAST:event_btn_CapNhatActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
        close_Dialog();
        this.dispose();
        new ChucNang().setVisible(true);
        logger.log(Level.INFO, " Ng\u01b0\u1eddi d\u00f9ng {0} tr\u1edf v\u1ec1 m\u00e0n h\u00ecnh ch\u1ecdn ch\u1ee9c n\u0103ng\n", username);
    }//GEN-LAST:event_btn_backActionPerformed

    
    
//btn mở dialog con
    private void btn_TimKiemBox_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiemBox_closeActionPerformed
        // TODO add your handling code here: 
       animation_OpenDialog();
        this.setLocation(Setting.SettingUI.mainScreen_Location_Center);
    }//GEN-LAST:event_btn_TimKiemBox_closeActionPerformed

    private void btn_TimKiemBox_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiemBox_searchActionPerformed
        // TODO add your handling code here:
        load_Table();
        logger.log(Level.INFO, "Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 t\u00ecm ki\u1ebfm th\u00f4ngg tin kh\u00e1ch h\u00e0ng, n\u1ed9i dung t\u00ecm ki\u1ebfm: {1}\n", new Object[]{username, jTextField_TimKiemBox_searchString.getText()});
    }//GEN-LAST:event_btn_TimKiemBox_searchActionPerformed

    private void btn_SapXepBox_OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SapXepBox_OkActionPerformed
        // TODO add your handling code here:
        load_Table();
    }//GEN-LAST:event_btn_SapXepBox_OkActionPerformed

    private void btn_SapXepBox_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SapXepBox_closeActionPerformed
        // TODO add your handling code here:
        animation_OpenDialog();
        this.setLocation(Setting.SettingUI.mainScreen_Location_Center);
    }//GEN-LAST:event_btn_SapXepBox_closeActionPerformed

    private void btn_ChiTietBox_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ChiTietBox_closeActionPerformed
        // TODO add your handling code here:
        animation_OpenDialog();
        this.setLocation(Setting.SettingUI.mainScreen_Location_Center);
    }//GEN-LAST:event_btn_ChiTietBox_closeActionPerformed

    private void btn_CapNhatThemBox_CapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapNhatThemBox_CapNhatActionPerformed
        // TODO add your handling code here:
        // Các lựa chọn

        if(checkText_isValid())
        {
            String SDT=jTextField_CapNhatThemBox_SDT.getText();
            String hoten=jTextField_CapNhatThemBox_HoTen.getText();
            String tuoi=jTextField_CapNhatThemBox_Tuoi.getText();
            ResultSet kh=dbqr.ExcuQuery_GetRow("KHACHHANG", "SDT='"+SDT+"'");
            try {
                if(kh.next()){
                    dbqr.ExcuQuery_Update("KHACHHANG",
                            "Hoten =N'"+hoten+"',"
                                    + "Tuoi= "+tuoi,
                            "SDT= '"+SDT+"'");
                    JOptionPane.showMessageDialog(null, "Cập Nhật Khách Hàng thành công!","Thông báo",1);
                }
                else JOptionPane.showMessageDialog(null, "Khách Hàng không tồn tại, không thể cập nhật!","Thông báo",1);
                    
            } catch (SQLException ex) {
                Logger.getLogger(QuanLyKhachHang.class.getName()).log(Level.SEVERE, null, ex);
            }
            load_Table();
            logger.log(Level.INFO, " Người dùng "+username+" \u0111\u00e3 c\u1eadp nh\u1eadt kh\u00e1ch h\u00e0ng {0}\n", SDT);           
        }
    }//GEN-LAST:event_btn_CapNhatThemBox_CapNhatActionPerformed

    private void btn_CapNhatThemBox_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapNhatThemBox_closeActionPerformed
        // TODO add your handling code here:
        animation_OpenDialog();
        this.setLocation(Setting.SettingUI.mainScreen_Location_Center);
    }//GEN-LAST:event_btn_CapNhatThemBox_closeActionPerformed

    private void btn_CapNhatThemBox_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapNhatThemBox_ThemActionPerformed
        // TODO add your handling code here:
        
        // Các lựa chọn
        if(checkText_isValid())
        {
            String SDT=jTextField_CapNhatThemBox_SDT.getText();
            String hoten=jTextField_CapNhatThemBox_HoTen.getText();
            String tuoi=jTextField_CapNhatThemBox_Tuoi.getText();                     
            ResultSet kh=dbqr.ExcuQuery_GetRow("KHACHHANG", "SDT='"+SDT+"'");
            try {
                    if(kh.next()==false)
                    {
                        dbqr.ExcuQuery_Add(
                        "INSERT [dbo].[KHACHHANG] ([SDT],[Hoten], [Tuoi] ) VALUES ("
                        + "'"+SDT+"',"
                            + "N'"+hoten+"',"
                                    + tuoi+")");
                        JOptionPane.showMessageDialog(null, "Thêm Khách Hàng thành công!","Thông báo",1);
                    }
                    else JOptionPane.showMessageDialog(null, "Khách Hàng đã tồn tại không thể thêm","Thông báo",1);

                } catch (SQLException ex) {
                    Logger.getLogger(QuanLySach.class.getName()).log(Level.SEVERE, null, ex);
                }
            load_Table();
            logger.log(Level.INFO, " Người dùng "+username+" \u0111\u00e3 th\u00eam kh\u00e1ch h\u00e0ng {0}\n", SDT);
        }

    }//GEN-LAST:event_btn_CapNhatThemBox_ThemActionPerformed

    private void jTable1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseDragged
        // TODO add your handling code here:
        dialog_setText();
    }//GEN-LAST:event_jTable1MouseDragged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        dialog_setText();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jComboBox_SapXepBox_option1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_SapXepBox_option1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_SapXepBox_option1ActionPerformed
    /**
    * Thiết lập dữ liệu cho các thành phần giao diện trong các hộp thoại "Cập nhật", "Chi tiết", "Trả sách", "Thuê sách" 
    * dựa trên dữ liệu của hàng được chọn trong bảng hoặc trạng thái của hộp thoại "Thêm".
    * Các thông tin sách bao gồm mã sách, hình ảnh, tên sách, tác giả, nhà xuất bản, năm xuất bản, số trang, số lượng,
    * giá sách, giá thuê, nội dung, vị trí.
    * 
    * Nếu đang mở hộp thoại "Thêm", chỉ mã sách sẽ được tự động điền vào.
    * Nếu đang mở hộp thoại "Cập nhật", dữ liệu sẽ được điền dựa trên dữ liệu của hàng được chọn trong bảng.
    * 
    * @see #get_row_Table(String, String)
    * @see #load_bookImage(String)
    */
   private void dialog_setText() {
       if (dialog_Opened.equals("them") == false) {
           tbModel = (DefaultTableModel) jTable1.getModel();
           String SDT;
           if (jTable1.getSelectedRowCount() == 1) {
               SDT=(String) tbModel.getValueAt(jTable1.getSelectedRow(), 0);
               ResultSet kh= dbqr.ExcuQuery_GetRow("KHACHHANG", "SDT='"+SDT+"'");
               try {
                   kh.next();
                   // Dialog cập nhật 
                   jTextField_CapNhatThemBox_SDT.setText(kh.getString(1));
                   jTextField_CapNhatThemBox_HoTen.setText(kh.getString(2));
                   jTextField_CapNhatThemBox_Tuoi.setText(kh.getString(3));

                   // Dialog chi tiết
                   jTextPane_ChiTietBox_KhachHang.setText(kh.getString(1)+"\n"+kh.getString(2)+"\nTuổi: "+kh.getString(3));
                   ResultSet s= dbqr.ExcuQuery_GetTable(" SACH s, KHACHHANG k, HOADONMUON m",
                                                        "k.SDT='"+SDT+"' and k.SDT=m.SDT and m.Masach = s.Masach",
                                                        "s.Masach ASC");
                   String listSach="";
                   while(s.next())
                   {
                       listSach+="**"+s.getString(3)+"\n";
                   }
                   jTextPane_ChiTietBox_SachMuon.setText(listSach);
                   
               } catch (SQLException ex) {
                   Logger.getLogger(QuanLyKhachHang.class.getName()).log(Level.SEVERE, null, ex);
               }
           } else {
               if (jTable1.getRowCount() == 0) {
                   JOptionPane.showMessageDialog(null, "Bảng không có dữ liệu, không thể cập nhật!",
                           "Thông báo", 2);
               }
           }
       } else
           jTextField_CapNhatThemBox_SDT.setText((String) tbModel.getValueAt(jTable1.getSelectedRow(), 0));
   }
    /**
    * Đóng các hộp thoại tương ứng với trạng thái hiện tại của ứng dụng và cài đặt lại giao diện.
    * Các hộp thoại được đóng bao gồm "Thêm", "Cập nhật", "Chi tiết", "Sắp xếp", "Tìm kiếm", "Trả sách", "Xóa", và "Thuê sách".
    * Cài đặt lại màu nền của các nút tương ứng trên giao diện người dùng.
    */
   private void close_Dialog() {
       if (dialog_Opened.equals("them")) {
           jFrame_CapNhatThem_dialog.setVisible(false);  
           btn_Them.setBackground(Setting.SettingUI.btn_colorDefault);
       }
       if (dialog_Opened.equals("capnhat")) {
           jFrame_CapNhatThem_dialog.dispose(); 
           btn_CapNhat.setBackground(Setting.SettingUI.btn_colorDefault);
       }
       if (dialog_Opened.equals("chitiet")) {
           jFrame_ChiTiet_dialog.setVisible(false);
           btn_ChiTiet.setBackground(Setting.SettingUI.btn_colorDefault);
       }
       if (dialog_Opened.equals("sapxep")) {
           jFrame_SapXep_dialog.setVisible(false);
           btn_SapXep.setBackground(Setting.SettingUI.btn_colorDefault);
       }
       if (dialog_Opened.equals("timkiem")) {
           jFrame_TimKiem_dialog.setVisible(false);
           btn_TimKiem.setBackground(Setting.SettingUI.btn_colorDefault);
       }
       if (dialog_Opened.equals("xoa")) {
           btn_Xoa.setBackground(Setting.SettingUI.btn_colorDefault);    
       }
   }

    
    /**
    * Thực hiện hiệu ứng mở hộp thoại bằng cách đặt vị trí và đóng hộp thoại hiện tại.
    * Điều này có thể kết hợp với một hiệu ứng mở rộng khác để tạo hiệu ứng mở hộp thoại.
    */
    private void animation_OpenDialog() {
       this.setLocation(Setting.SettingUI.mainScreen_Location_Left); // Đặt vị trí của hộp thoại mới
       close_Dialog(); // Đóng hộp thoại hiện tại 
    }  
    
   
   
   
   /**
    * Thiết lập quyền truy cập và hiển thị các thành phần giao diện dựa trên vai trò người dùng.
    * 
    * @param Role Vai trò của người dùng ("Nhân Viên", "Quản Lý", hoặc "Khách Hàng").
    */
   private void setRole(String Role) {
        switch (Role) {
            case "Nhân Viên" -> {
            }
            case "Quản Lý" -> {
            }
            case "Khách Hàng" -> {

            }
            default -> {
            }
        }
        // Cài đặt cho vai trò Nhân Viên (có thể thêm các cài đặt khác nếu cần)
        // Cài đặt cho vai trò Quản Lý (có thể thêm các cài đặt khác nếu cần)
           }
   
   
   /**
    * Chuyển đổi các chuỗi mô tả sắp xếp từ giao diện người dùng thành các giá trị tương ứng của truy vấn cơ sở dữ liệu.
    * 
    * @param s Chuỗi mô tả sắp xếp từ giao diện người dùng.
    * @return Giá trị tương ứng của truy vấn cơ sở dữ liệu, hoặc chuỗi rỗng nếu không tìm thấy giá trị phù hợp.
    */
   private String convertToDbString(String s) {
       if (s.equals("Tăng dần")) return "ASC";
       if (s.equals("Giảm dần")) return "DESC";
       if (s.equals("Họ Tên")) return "Hoten";
       if (s.equals("Số điện thoại")) return "SDT";
       if (s.equals("Tuổi")) return "Tuoi";

       return "";
   }

   /**
    * Kiểm tra tính hợp lệ của các thông tin nhập liệu dựa trên loại hộp thoại đang mở và lựa chọn được chọn.
    * Hiển thị thông báo lỗi nếu có lỗi và trả về true nếu dữ liệu hợp lệ, ngược lại trả về false.
    * 
    * @param choice Lựa chọn đại diện cho hộp thoại hiện tại (0: Thêm/Cập nhật sách, 1: Trả sách, 2: Thuê sách).
    * @return True nếu dữ liệu nhập liệu hợp lệ, ngược lại trả về false.
    */
   private boolean checkText_isValid() {
       String error_String = "";

       if (dialog_Opened.equals("them") || dialog_Opened.equals("capnhat")) {
               // Kiểm tra thông tin khi thêm/cập nhật sách
           String hoten = jTextField_CapNhatThemBox_HoTen.getText().equals("") ? error_String += "Họ Tên- " : "";
           String SDT = jTextField_CapNhatThemBox_SDT.getText();
           if (Setting.SettingUI.isValidPhoneNumber(SDT) == false) {
               error_String += "Số Điện Thoại- ";
           }
           try {
               int Tuoi = jTextField_CapNhatThemBox_Tuoi.getText().equals("") ? -1
                       : Integer.parseInt(jTextField_CapNhatThemBox_Tuoi.getText());
               if (Tuoi >= 100 || Tuoi <= 5) {
                   error_String += "Tuổi- ";
               }
           } catch (NumberFormatException e) {
               error_String += "Tuổi- ";
           }
       }

       if (error_String.equals("") == false) {
           JOptionPane.showMessageDialog(null, "Thông tin " + error_String + "không chính xác, vui lòng nhập lại!",
                   "Nhập sai thông tin", 2);
           return false;
       }
       return true;
   }

   /**
    * Hiển thị một hộp thoại tùy chọn với các lựa chọn được cung cấp và trả về lựa chọn được chọn.
    * 
    * @param options Mảng các đối tượng đại diện cho các lựa chọn hiển thị trong hộp thoại.
    * @return Số nguyên đại diện cho lựa chọn được chọn từ hộp thoại. 
    *         Nếu không có lựa chọn nào được chọn hoặc hộp thoại bị đóng, trả về giá trị mặc định của JOptionPane.
    */
   private int optionPane(Object[] options) {
        // Hiển thị JOptionPane với các lựa chọn và một thông điệp (hình ảnh có thể thêm vào nếu cần)
        int choice = JOptionPane.showOptionDialog(
                null,
                "Bạn muốn: ",
                "Chọn Chức Năng",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.INFORMATION_MESSAGE,
                null, // Thay "icon.png" bằng đường dẫn của hình ảnh bạn muốn sử dụng
                options,
                options[0]
        );
        return choice;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new QuanLyKhachHang().setVisible(true);
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_CapNhat;
    private javax.swing.JButton btn_CapNhatThemBox_CapNhat;
    private javax.swing.JButton btn_CapNhatThemBox_Them;
    private javax.swing.JButton btn_CapNhatThemBox_close;
    private javax.swing.JButton btn_ChiTiet;
    private javax.swing.JButton btn_ChiTietBox_close;
    private javax.swing.JButton btn_SapXep;
    private javax.swing.JButton btn_SapXepBox_Ok;
    private javax.swing.JButton btn_SapXepBox_close;
    private javax.swing.JButton btn_Them;
    private javax.swing.JButton btn_TimKiem;
    private javax.swing.JButton btn_TimKiemBox_close;
    private javax.swing.JButton btn_TimKiemBox_search;
    private javax.swing.JButton btn_Xoa;
    private javax.swing.JButton btn_back;
    private javax.swing.JComboBox<String> jComboBox_SapXepBox_option1;
    private javax.swing.JComboBox<String> jComboBox_SapXepBox_option2;
    private javax.swing.JComboBox<String> jComboBox_TimKiemBox_item;
    private javax.swing.JFrame jFrame_CapNhatThem_dialog;
    private javax.swing.JFrame jFrame_ChiTiet_dialog;
    private javax.swing.JFrame jFrame_SapXep_dialog;
    private javax.swing.JFrame jFrame_TimKiem_dialog;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_mainTittle;
    private javax.swing.JPanel jPanel_CapNhatThemBox;
    private javax.swing.JPanel jPanel_ChiTietBox;
    private javax.swing.JPanel jPanel_ChucNang_main;
    private javax.swing.JPanel jPanel_SapXepBox;
    private javax.swing.JPanel jPanel_TimKiemBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane_ChiTietBox_Content;
    private javax.swing.JScrollPane jScrollPane_ChiTietBox_Content1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField_CapNhatThemBox_HoTen;
    private javax.swing.JTextField jTextField_CapNhatThemBox_SDT;
    private javax.swing.JTextField jTextField_CapNhatThemBox_Tuoi;
    private javax.swing.JTextField jTextField_TimKiemBox_searchString;
    private javax.swing.JTextPane jTextPane_ChiTietBox_KhachHang;
    private javax.swing.JTextPane jTextPane_ChiTietBox_SachMuon;
    // End of variables declaration//GEN-END:variables

    private Image Image(ImageIcon img_bookIcon) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
