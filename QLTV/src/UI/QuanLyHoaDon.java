/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms    @Override
    public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public Insets getBorderInsets(Component c) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public boolean isBorderOpaque() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
/JFrame.java to edit this template
 */
package UI;


import java.awt.Image;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import DB.DbQuery;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author Admin
 */
public class QuanLyHoaDon extends javax.swing.JFrame{

    /**
     * Creates new form DangNhap
     */
    private final ImageIcon img_Back;
    private final String role=DangNhap.Role;
    private DefaultTableModel tbModel;
    private final DbQuery dbqr=new DbQuery();
    private ResultSet rs;
    private String dialog_Opened="";
    private String show_option="choxuly";
    private final String username=DangNhap.Username;
    private static final Logger logger = Setting.SettingUI.logger;

    public QuanLyHoaDon() {
        img_Back=new ImageIcon(new ImageIcon(getClass().getResource("/Image/backicon.png")).getImage().getScaledInstance(45, 25, Image.SCALE_SMOOTH));
        initComponents();
        setRole(role);
        btn_ChoXuLy.setBackground(Setting.SettingUI.btn_colorChange);
        load_Table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame_TimKiem_dialog = new javax.swing.JFrame();
        jPanel_TimKiemBox = new javax.swing.JPanel();
        jTextField_TimKiemBox_searchString = new javax.swing.JTextField();
        btn_TimKiemBox_search = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_TimKiemBox_close = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        jComboBox_TimKiemBox_item = new javax.swing.JComboBox<>();
        jFrame_ChiTiet_dialog = new javax.swing.JFrame();
        jPanel_ChiTietBox = new javax.swing.JPanel();
        btn_ChiTietBox_close = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        jScrollPane_ChiTietBox_Content = new javax.swing.JScrollPane();
        jTextPane_ChiTietBox_HDTra = new javax.swing.JTextPane();
        jScrollPane_ChiTietBox_Content1 = new javax.swing.JScrollPane();
        jTextPane_ChiTietBox_KhachHang = new javax.swing.JTextPane();
        jScrollPane_ChiTietBox_Content2 = new javax.swing.JScrollPane();
        jTextPane_ChiTietBox_Sach = new javax.swing.JTextPane();
        jScrollPane_ChiTietBox_Content3 = new javax.swing.JScrollPane();
        jTextPane_ChiTietBox_HDMuon = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel_ChiTietBox_Id = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane_ChiTietBox_Content4 = new javax.swing.JScrollPane();
        jTextPane_ChiTietBox_NhanVien = new javax.swing.JTextPane();
        jFrame_CapNhat_dialog = new javax.swing.JFrame();
        jPanel_TimKiemBox1 = new javax.swing.JPanel();
        btn_CapNhat_CapNhat = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_CapNhat_close = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        jLabel6 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel_ChucNang_main = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_TimKiem = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_HoaDonTra = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_ChiTiet = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_CapNhat = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        jLabel_mainTittle = new javax.swing.JLabel();
        btn_back = new javax.swing.JButton();
        btn_ChoXuLy = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_HoaDonMuon = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_HoaDonHoanThanh = Setting.SettingUI.createRoundedButton(0.5,0.5,20);
        btn_Xoa = Setting.SettingUI.createRoundedButton(0.5,0.5,20);

        jFrame_TimKiem_dialog.setLocation(Setting.SettingUI.dialog_Location);
        jFrame_TimKiem_dialog.setMinimumSize(new java.awt.Dimension(466, 143));
        jFrame_TimKiem_dialog.setUndecorated(true);
        jFrame_TimKiem_dialog.setResizable(false);

        jPanel_TimKiemBox.setBackground(new java.awt.Color(255, 138, 20));
        jPanel_TimKiemBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jTextField_TimKiemBox_searchString.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        btn_TimKiemBox_search.setBackground(new java.awt.Color(250, 215, 172));
        btn_TimKiemBox_search.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btn_TimKiemBox_search.setText("Tìm");
        btn_TimKiemBox_search.setBorderPainted(false);
        btn_TimKiemBox_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiemBox_searchActionPerformed(evt);
            }
        });

        btn_TimKiemBox_close.setBackground(new java.awt.Color(250, 215, 172));
        btn_TimKiemBox_close.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btn_TimKiemBox_close.setText("Đóng");
        btn_TimKiemBox_close.setBorderPainted(false);
        btn_TimKiemBox_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiemBox_closeActionPerformed(evt);
            }
        });

        jComboBox_TimKiemBox_item.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox_TimKiemBox_item.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã Hóa Đơn", "SDT Khách Hàng", "Mã Sách", "Ngày Mượn", "Ngày Hẹn", "Ngày Trả" }));

        javax.swing.GroupLayout jPanel_TimKiemBoxLayout = new javax.swing.GroupLayout(jPanel_TimKiemBox);
        jPanel_TimKiemBox.setLayout(jPanel_TimKiemBoxLayout);
        jPanel_TimKiemBoxLayout.setHorizontalGroup(
            jPanel_TimKiemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TimKiemBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox_TimKiemBox_item, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_TimKiemBox_searchString, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TimKiemBoxLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(btn_TimKiemBox_close, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(btn_TimKiemBox_search, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );
        jPanel_TimKiemBoxLayout.setVerticalGroup(
            jPanel_TimKiemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TimKiemBoxLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel_TimKiemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_TimKiemBox_searchString, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(jComboBox_TimKiemBox_item))
                .addGap(18, 18, 18)
                .addGroup(jPanel_TimKiemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_TimKiemBox_search, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_TimKiemBox_close, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jFrame_TimKiem_dialogLayout = new javax.swing.GroupLayout(jFrame_TimKiem_dialog.getContentPane());
        jFrame_TimKiem_dialog.getContentPane().setLayout(jFrame_TimKiem_dialogLayout);
        jFrame_TimKiem_dialogLayout.setHorizontalGroup(
            jFrame_TimKiem_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_TimKiemBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame_TimKiem_dialogLayout.setVerticalGroup(
            jFrame_TimKiem_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_TimKiemBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jFrame_ChiTiet_dialog.setLocation(Setting.SettingUI.dialog_Location);
        jFrame_ChiTiet_dialog.setMinimumSize(new java.awt.Dimension(466, 623));
        jFrame_ChiTiet_dialog.setUndecorated(true);

        jPanel_ChiTietBox.setBackground(new java.awt.Color(255, 138, 20));
        jPanel_ChiTietBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel_ChiTietBox.setPreferredSize(new java.awt.Dimension(466, 623));

        btn_ChiTietBox_close.setBackground(new java.awt.Color(250, 215, 172));
        btn_ChiTietBox_close.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btn_ChiTietBox_close.setText("Đóng");
        btn_ChiTietBox_close.setBorderPainted(false);
        btn_ChiTietBox_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ChiTietBox_closeActionPerformed(evt);
            }
        });

        jTextPane_ChiTietBox_HDTra.setEditable(false);
        // Disable auto-scrolling
        DefaultCaret caret1 = (DefaultCaret) jTextPane_ChiTietBox_HDTra.getCaret();
        caret1.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);
        jTextPane_ChiTietBox_HDTra.setBackground(new java.awt.Color(250, 215, 172));
        jTextPane_ChiTietBox_HDTra.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextPane_ChiTietBox_HDTra.setAutoscrolls(false);
        jTextPane_ChiTietBox_HDTra.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextPane_ChiTietBox_HDTra.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextPane_ChiTietBox_HDTra.setMaximumSize(new java.awt.Dimension(7, 28));
        jTextPane_ChiTietBox_HDTra.setName(""); // NOI18N
        jScrollPane_ChiTietBox_Content.setViewportView(jTextPane_ChiTietBox_HDTra);

        jTextPane_ChiTietBox_KhachHang.setEditable(false);
        jTextPane_ChiTietBox_KhachHang.setBackground(new java.awt.Color(250, 215, 172));
        jTextPane_ChiTietBox_KhachHang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextPane_ChiTietBox_KhachHang.setAutoscrolls(false);
        jTextPane_ChiTietBox_KhachHang.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextPane_ChiTietBox_KhachHang.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextPane_ChiTietBox_KhachHang.setMaximumSize(new java.awt.Dimension(7, 28));
        jTextPane_ChiTietBox_KhachHang.setName(""); // NOI18N
        jScrollPane_ChiTietBox_Content1.setViewportView(jTextPane_ChiTietBox_KhachHang);

        jTextPane_ChiTietBox_Sach.setEditable(false);
        jTextPane_ChiTietBox_Sach.setBackground(new java.awt.Color(250, 215, 172));
        // Disable auto-scrolling
        DefaultCaret caret2 = (DefaultCaret) jTextPane_ChiTietBox_Sach.getCaret();
        caret2.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);
        jTextPane_ChiTietBox_Sach.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextPane_ChiTietBox_Sach.setText("Tên Sách: Tri Thức Vạn Vật\nNhà Xuất Bản: Kim Đồng\nTác Giả: Lưu Diệc Phi");
        jTextPane_ChiTietBox_Sach.setAutoscrolls(false);
        jTextPane_ChiTietBox_Sach.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextPane_ChiTietBox_Sach.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextPane_ChiTietBox_Sach.setMaximumSize(new java.awt.Dimension(582, 578));
        jTextPane_ChiTietBox_Sach.setName(""); // NOI18N
        jScrollPane_ChiTietBox_Content2.setViewportView(jTextPane_ChiTietBox_Sach);

        jTextPane_ChiTietBox_HDMuon.setEditable(false);
        jTextPane_ChiTietBox_HDMuon.setBackground(new java.awt.Color(250, 215, 172));
        jTextPane_ChiTietBox_HDMuon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextPane_ChiTietBox_HDMuon.setAutoscrolls(false);
        jTextPane_ChiTietBox_HDMuon.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextPane_ChiTietBox_HDMuon.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextPane_ChiTietBox_HDMuon.setMaximumSize(new java.awt.Dimension(7, 28));
        jTextPane_ChiTietBox_HDMuon.setName(""); // NOI18N
        jScrollPane_ChiTietBox_Content3.setViewportView(jTextPane_ChiTietBox_HDMuon);

        jPanel1.setBackground(new java.awt.Color(250, 215, 172));

        jLabel_ChiTietBox_Id.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel_ChiTietBox_Id.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_ChiTietBox_Id.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_ChiTietBox_Id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_ChiTietBox_Id, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Hóa Đơn Mượn");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Hóa Đơn Trả");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Sách");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Khách Hàng");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Nhân Viên");

        jTextPane_ChiTietBox_NhanVien.setEditable(false);
        jTextPane_ChiTietBox_NhanVien.setBackground(new java.awt.Color(250, 215, 172));
        jTextPane_ChiTietBox_NhanVien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextPane_ChiTietBox_NhanVien.setAutoscrolls(false);
        jTextPane_ChiTietBox_NhanVien.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextPane_ChiTietBox_NhanVien.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextPane_ChiTietBox_NhanVien.setMaximumSize(new java.awt.Dimension(7, 28));
        jTextPane_ChiTietBox_NhanVien.setName(""); // NOI18N
        jScrollPane_ChiTietBox_Content4.setViewportView(jTextPane_ChiTietBox_NhanVien);

        javax.swing.GroupLayout jPanel_ChiTietBoxLayout = new javax.swing.GroupLayout(jPanel_ChiTietBox);
        jPanel_ChiTietBox.setLayout(jPanel_ChiTietBoxLayout);
        jPanel_ChiTietBoxLayout.setHorizontalGroup(
            jPanel_ChiTietBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ChiTietBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_ChiTietBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ChiTietBoxLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(17, 17, 17))
                    .addGroup(jPanel_ChiTietBoxLayout.createSequentialGroup()
                        .addComponent(jScrollPane_ChiTietBox_Content2)
                        .addContainerGap())))
            .addGroup(jPanel_ChiTietBoxLayout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jLabel3)
                .addContainerGap(217, Short.MAX_VALUE))
            .addGroup(jPanel_ChiTietBoxLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(btn_ChiTietBox_close, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ChiTietBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_ChiTietBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_ChiTietBoxLayout.createSequentialGroup()
                        .addGroup(jPanel_ChiTietBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_ChiTietBoxLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabel1))
                            .addComponent(jScrollPane_ChiTietBox_Content3, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_ChiTietBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane_ChiTietBox_Content1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ChiTietBoxLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(24, 24, 24))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ChiTietBoxLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(56, 56, 56))
                    .addGroup(jPanel_ChiTietBoxLayout.createSequentialGroup()
                        .addComponent(jScrollPane_ChiTietBox_Content4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane_ChiTietBox_Content, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel_ChiTietBoxLayout.setVerticalGroup(
            jPanel_ChiTietBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ChiTietBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane_ChiTietBox_Content2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_ChiTietBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_ChiTietBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane_ChiTietBox_Content1)
                    .addComponent(jScrollPane_ChiTietBox_Content3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel_ChiTietBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_ChiTietBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane_ChiTietBox_Content4, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(jScrollPane_ChiTietBox_Content))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_ChiTietBox_close, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jFrame_ChiTiet_dialogLayout = new javax.swing.GroupLayout(jFrame_ChiTiet_dialog.getContentPane());
        jFrame_ChiTiet_dialog.getContentPane().setLayout(jFrame_ChiTiet_dialogLayout);
        jFrame_ChiTiet_dialogLayout.setHorizontalGroup(
            jFrame_ChiTiet_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_ChiTietBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jFrame_ChiTiet_dialogLayout.setVerticalGroup(
            jFrame_ChiTiet_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_ChiTietBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jFrame_CapNhat_dialog.setLocation(Setting.SettingUI.dialog_Location);
        jFrame_CapNhat_dialog.setMinimumSize(new java.awt.Dimension(466, 143));
        jFrame_CapNhat_dialog.setUndecorated(true);
        jFrame_CapNhat_dialog.setResizable(false);

        jPanel_TimKiemBox1.setBackground(new java.awt.Color(255, 138, 20));
        jPanel_TimKiemBox1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btn_CapNhat_CapNhat.setBackground(new java.awt.Color(250, 215, 172));
        btn_CapNhat_CapNhat.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btn_CapNhat_CapNhat.setText("Cập Nhật");
        btn_CapNhat_CapNhat.setBorderPainted(false);
        btn_CapNhat_CapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhat_CapNhatActionPerformed(evt);
            }
        });

        btn_CapNhat_close.setBackground(new java.awt.Color(250, 215, 172));
        btn_CapNhat_close.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btn_CapNhat_close.setText("Đóng");
        btn_CapNhat_close.setBorderPainted(false);
        btn_CapNhat_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhat_closeActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Trạng Thái Hóa Đơn:");

        jToggleButton1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jToggleButton1.setText("Chưa Thanh Toán");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_TimKiemBox1Layout = new javax.swing.GroupLayout(jPanel_TimKiemBox1);
        jPanel_TimKiemBox1.setLayout(jPanel_TimKiemBox1Layout);
        jPanel_TimKiemBox1Layout.setHorizontalGroup(
            jPanel_TimKiemBox1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TimKiemBox1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btn_CapNhat_close, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                .addComponent(btn_CapNhat_CapNhat)
                .addGap(38, 38, 38))
            .addGroup(jPanel_TimKiemBox1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButton1)
                .addContainerGap())
        );
        jPanel_TimKiemBox1Layout.setVerticalGroup(
            jPanel_TimKiemBox1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TimKiemBox1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel_TimKiemBox1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_TimKiemBox1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_CapNhat_close, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_CapNhat_CapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jFrame_CapNhat_dialogLayout = new javax.swing.GroupLayout(jFrame_CapNhat_dialog.getContentPane());
        jFrame_CapNhat_dialog.getContentPane().setLayout(jFrame_CapNhat_dialogLayout);
        jFrame_CapNhat_dialogLayout.setHorizontalGroup(
            jFrame_CapNhat_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_TimKiemBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame_CapNhat_dialogLayout.setVerticalGroup(
            jFrame_CapNhat_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_TimKiemBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(600, 300));
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(1063, 623));
        setMinimumSize(new java.awt.Dimension(1063, 623));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1063, 623));
        setResizable(false);

        jPanel_ChucNang_main.setBackground(Setting.SettingUI.UI_colorDefault);
        jPanel_ChucNang_main.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel_ChucNang_main.setToolTipText("");
        jPanel_ChucNang_main.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Hóa Đơn", "SDT Khách Hàng", "Mã Sách", "Số Lượng", "Ngày Trả", "Số Tiền Còn Lại","Trạng Thái Thanh Toán"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setRowHeight(30);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowHorizontalLines(false);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(30);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(30);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(180);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(180);
        jTable1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTable1MouseDragged(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btn_TimKiem.setBackground(new java.awt.Color(250, 215, 172));
        btn_TimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_TimKiem.setText("Tìm Kiếm");
        btn_TimKiem.setBorderPainted(false);
        btn_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiemActionPerformed(evt);
            }
        });

        btn_HoaDonTra.setBackground(new java.awt.Color(250, 215, 172));
        btn_HoaDonTra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_HoaDonTra.setText("Hóa Đơn Trả");
        btn_HoaDonTra.setBorderPainted(false);
        btn_HoaDonTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HoaDonTraActionPerformed(evt);
            }
        });

        btn_ChiTiet.setBackground(new java.awt.Color(250, 215, 172));
        btn_ChiTiet.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_ChiTiet.setText("Chi Tiết");
        btn_ChiTiet.setBorderPainted(false);
        btn_ChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ChiTietActionPerformed(evt);
            }
        });

        btn_CapNhat.setBackground(new java.awt.Color(250, 215, 172));
        btn_CapNhat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_CapNhat.setText("Cập Nhật");
        btn_CapNhat.setBorderPainted(false);
        btn_CapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhatActionPerformed(evt);
            }
        });

        jLabel_mainTittle.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel_mainTittle.setText("Quản Lý Hóa Đơn");

        btn_back.setBackground(new java.awt.Color(250, 215, 172));
        btn_back.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_back.setIcon(img_Back);
        btn_back.setBorderPainted(false);
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        btn_ChoXuLy.setBackground(new java.awt.Color(250, 215, 172));
        btn_ChoXuLy.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_ChoXuLy.setText("Chờ Xử Lý");
        btn_ChoXuLy.setBorderPainted(false);
        btn_ChoXuLy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ChoXuLyActionPerformed(evt);
            }
        });

        btn_HoaDonMuon.setBackground(new java.awt.Color(250, 215, 172));
        btn_HoaDonMuon.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_HoaDonMuon.setText("Hóa Đơn Mượn");
        btn_HoaDonMuon.setBorderPainted(false);
        btn_HoaDonMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HoaDonMuonActionPerformed(evt);
            }
        });

        btn_HoaDonHoanThanh.setBackground(new java.awt.Color(250, 215, 172));
        btn_HoaDonHoanThanh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_HoaDonHoanThanh.setText("Hoàn Thành");
        btn_HoaDonHoanThanh.setBorderPainted(false);
        btn_HoaDonHoanThanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HoaDonHoanThanhActionPerformed(evt);
            }
        });

        btn_Xoa.setBackground(new java.awt.Color(250, 215, 172));
        btn_Xoa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_Xoa.setText("Xóa");
        btn_Xoa.setBorderPainted(false);
        btn_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_ChucNang_mainLayout = new javax.swing.GroupLayout(jPanel_ChucNang_main);
        jPanel_ChucNang_main.setLayout(jPanel_ChucNang_mainLayout);
        jPanel_ChucNang_mainLayout.setHorizontalGroup(
            jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ChucNang_mainLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 892, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_TimKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_ChiTiet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_CapNhat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_HoaDonTra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_ChoXuLy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_HoaDonMuon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_HoaDonHoanThanh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_Xoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ChucNang_mainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_mainTittle, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(399, 399, 399))
            .addGroup(jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel_ChucNang_mainLayout.createSequentialGroup()
                    .addGap(892, 892, 892)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(169, Short.MAX_VALUE)))
            .addGroup(jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 1061, Short.MAX_VALUE))
        );
        jPanel_ChucNang_mainLayout.setVerticalGroup(
            jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel_ChucNang_mainLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_mainTittle)
                    .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_ChucNang_mainLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(btn_TimKiem)
                .addGap(30, 30, 30)
                .addComponent(btn_ChoXuLy)
                .addGap(30, 30, 30)
                .addComponent(btn_HoaDonMuon)
                .addGap(30, 30, 30)
                .addComponent(btn_HoaDonTra)
                .addGap(30, 30, 30)
                .addComponent(btn_HoaDonHoanThanh)
                .addGap(30, 30, 30)
                .addComponent(btn_ChiTiet)
                .addGap(28, 28, 28)
                .addComponent(btn_CapNhat)
                .addGap(29, 29, 29)
                .addComponent(btn_Xoa)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ChucNang_mainLayout.createSequentialGroup()
                    .addGap(0, 75, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel_ChucNang_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ChucNang_mainLayout.createSequentialGroup()
                    .addContainerGap(75, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(542, 542, 542)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_ChucNang_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_ChucNang_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("");

        setSize(new java.awt.Dimension(1063, 621));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

/**
 * Phương thức này thực hiện việc tải dữ liệu từ cơ sở dữ liệu và hiển thị nó trong bảng.
 * Dữ liệu được lấy dựa trên các thông tin nhập từ các thành phần giao diện như combobox và textbox.
 * 
 * @throws SQLException Nếu có lỗi xảy ra trong quá trình truy vấn cơ sở dữ liệu.
 */
    private void load_Table()
    {
        if(tbModel!=null)
            tbModel.setRowCount(0);
        // Lấy thông tin từ các thành phần giao diện
        String typeSearch = convertToDbString(jComboBox_TimKiemBox_item.getItemAt(jComboBox_TimKiemBox_item.getSelectedIndex()));
        String searchString = jTextField_TimKiemBox_searchString.getText();

        try {
            // Kiểm tra loại sắp xếp được chọn từ combobox
            if (show_option.equals("choxuly")) {
                String[] columnName=new String [] {
                    "Mã Hóa Đơn", "SDT Khách Hàng", "Mã Sách", "Số Lượng", "Số Tiền Còn Lại", "Ngày Trả","Trạng Thái Thanh Toán"
                };
                settingTable(columnName);
                // Thực hiện truy vấn cơ sở dữ liệu
                if(typeSearch.equals("Ngaytra")){
                    rs = dbqr.ExcuQuery_GetTable("HOADONMUON m, HOADONTRA t",
                        "t."+typeSearch + " like N'%" + searchString + "%' and m.Id=t.Id and m.Masach=t.Masach and Trangthaithanhtoan=0", "m.Id ASC");
                }
                else{
                    rs = dbqr.ExcuQuery_GetTable("HOADONMUON m, HOADONTRA t",
                        "m."+typeSearch + " like N'%" + searchString + "%' and m.Id=t.Id and m.Masach=t.Masach and Trangthaithanhtoan=0", "m.Id ASC");
                }
                
                // Hiển thị dữ liệu trong bảng
                tbModel = (DefaultTableModel) jTable1.getModel();
                while (rs.next()) {
                    String Data[] = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(14), rs.getString(13), rs.getString(15), rs.getString(17)};
                    tbModel.addRow(Data);
                }
                logger.log(Level.INFO, "Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 xem d\u1eef li\u1ec7u h\u00f3a \u0111\u01a1n \u0111ang ch\u1edd x\u1eed l\u00fd\n", username);
            }
            if(show_option.equals("hoadonmuon")){
                String[] columnName=new String [] {
                    "Mã Hóa Đơn","SDT Khách Hàng", "Mã Sách","Số Lượng", "Tiền Thanh Toán", "Ngày Hẹn Trả Sách","Trạng Thái Hóa Đơn"
                };
                settingTable(columnName);
                // Thực hiện truy vấn cơ sở dữ liệu
                if(typeSearch.equals("Ngaytra"))
                {
                }
                else {
                    rs= dbqr.ExcuQuery_GetTable("HOADONMUON m",
                                                "m."+typeSearch+" like N'%"+searchString+"%'"
                                                + " and NOT EXISTS(select *\n" +
                                                                    "from HOADONTRA  t\n" +
                                                                    "where m.Id=t.Id and m.Masach=t.Masach and t.Trangthaihoanthanh=1)",
                                          "Id ASC");
                }
                // Hiển thị dữ liệu trong bảng                
                tbModel=(DefaultTableModel)jTable1.getModel();
                while(rs.next())
                {
                    String Data[] = {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(6),rs.getString(8),rs.getString(9)};
                    tbModel.addRow(Data);
                }
                logger.log(Level.INFO, "Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 xem d\u1eef li\u1ec7u h\u00f3a \u0111\u01a1n m\u01b0\u1ee3n\n", username);

            }
            if(show_option.equals("hoadontra")){
                String[] columnName=new String [] {
                    "Mã Hóa Đơn", "Mã Nhân Viên","Mã Sách", "Số Tiền Còn lại","Số Lượng Trả", "Ngày Trả Sách", "Trạng Thái Hoàn Thành"
                };
                settingTable(columnName);
                // Thực hiện truy vấn cơ sở dữ liệu
                if(typeSearch.equals("SDT")||
                        typeSearch.equals("Masach")||typeSearch.equals("Ngaymuon")||typeSearch.equals("Ngayhen"))
                {
                }
                else
                {
                    rs= dbqr.ExcuQuery_GetTable("HOADONTRA",
                                        typeSearch+" like N'%"+searchString+"%'", "Id ASC");
                }
                // Hiển thị dữ liệu trong bảng                
                tbModel=(DefaultTableModel)jTable1.getModel();
                while(rs.next())
                {
                    String Data[] = {rs.getString(1),rs.getString(3),rs.getString(2),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7)};
                    tbModel.addRow(Data);
                }
                logger.log(Level.INFO, "Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 xem d\u1eef li\u1ec7u h\u00f3a \u0111\u01a1n tr\u1ea3\n", username);
            }
            if(show_option.equals("hoadonhoanthanh")){
                 String[] columnName=new String [] {
                    "Mã Hóa Đơn", "SDT Khách Hàng", "Mã Sách", "Ngày Mượn Sách", "Ngày Hẹn Trả Sách", "Ngày Trả Sách"
                };
                settingTable(columnName);
                // Thực hiện truy vấn cơ sở dữ liệu
                if(typeSearch.equals("Ngaytra"))
                {
                    rs= dbqr.ExcuQuery_GetTable("HOADONMUON m, HOADONTRA t",
                                                    "m.Id=t.Id and m.Masach=t.Masach and t.Trangthaithanhtoan=1 and t."+typeSearch+" like N'%"+searchString+"%'","m.Id ASC");
                }
                else{
                    rs= dbqr.ExcuQuery_GetTable("HOADONMUON m, HOADONTRA t",
                                                    "m.Id=t.Id and m.Masach=t.Masach and t.Trangthaithanhtoan=1 and m."+typeSearch+" like N'%"+searchString+"%'","m.Id ASC");
                }
                // Hiển thị dữ liệu trong bảng
                tbModel=(DefaultTableModel)jTable1.getModel();
                while(rs.next())
                {
                    String Data[] = {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(7),rs.getString(8),rs.getString(15)};
                    tbModel.addRow(Data);
                }
                logger.log(Level.INFO, "Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 xem d\u1eef li\u1ec7u h\u00f3a \u0111\u01a1n ho\u00e0n th\u00e0nh\n", username);      
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void settingTable(String[] columnName){
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                columnName
            ) {
                boolean[] canEdit = new boolean [] {
                    false, false, false, false, false, false, false
                };

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
                });
    }

// btn chức năng
    private void btn_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiemActionPerformed
        // TODO add your handling code here:
        animation_OpenDialog();
        btn_TimKiem.setBackground(Setting.SettingUI.btn_colorChange);
        jFrame_TimKiem_dialog.setVisible(true);
        dialog_Opened="timkiem";
        logger.log(Level.INFO, "Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 s\u1eed d\u1ee5ng ch\u1ee9c n\u0103ng t\u00ecm ki\u1ebfm h\u00f3a \u0111\u01a1n\n", username);
    }//GEN-LAST:event_btn_TimKiemActionPerformed

    private void btn_HoaDonTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HoaDonTraActionPerformed
        // TODO add your handling code here:
        close_Dialog();
        this.setLocation(Setting.SettingUI.mainScreen_Location_Center);
        btn_HoaDonTra.setBackground(Setting.SettingUI.btn_colorChange);
        show_option="hoadontra";
        load_Table();
    }//GEN-LAST:event_btn_HoaDonTraActionPerformed

    private void btn_ChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ChiTietActionPerformed
        // TODO add your handling code here:
        animation_OpenDialog();
        btn_ChiTiet.setBackground(Setting.SettingUI.btn_colorChange);
        jFrame_ChiTiet_dialog.setVisible(true);
        dialog_Opened="chitiet";
        logger.log(Level.INFO, "Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 s\u1eed d\u1ee5ng ch\u1ee9c n\u0103ng xem th\u00f4ng tin chi ti\u1ebft h\u00f3a \u0111\u01a1n\n", username);
    }//GEN-LAST:event_btn_ChiTietActionPerformed

    private void btn_CapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapNhatActionPerformed
        // TODO add your handling code here:
        animation_OpenDialog();
        btn_CapNhat.setBackground(Setting.SettingUI.btn_colorChange);
        jFrame_CapNhat_dialog.setVisible(true);  
        dialog_Opened="capnhat";
        logger.log(Level.INFO, " Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 d\u00f9ng ch\u1ee9c n\u0103ng c\u1eadp nh\u1eadt\n", username);

    }//GEN-LAST:event_btn_CapNhatActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
        close_Dialog();
        this.dispose();
        new ChucNang().setVisible(true);
        logger.log(Level.INFO, " Ng\u01b0\u1eddi d\u00f9ng {0} tr\u1edf v\u1ec1 m\u00e0n h\u00ecnh ch\u1ecdn ch\u1ee9c n\u0103ng\n", username);
    }//GEN-LAST:event_btn_backActionPerformed

    
    
//btn mở dialog con
    private void btn_TimKiemBox_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiemBox_closeActionPerformed
        // TODO add your handling code here: 
       animation_OpenDialog();
        this.setLocation(Setting.SettingUI.mainScreen_Location_Center);
    }//GEN-LAST:event_btn_TimKiemBox_closeActionPerformed

    private void btn_TimKiemBox_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiemBox_searchActionPerformed
        // TODO add your handling code here:
        load_Table();
        logger.log(Level.INFO, "Ng\u01b0\u1eddi d\u00f9ng {0} \u0111\u00e3 t\u00ecm ki\u1ebfm th\u00f4ngg tin g\u00f3a \u0111\u01a1n, n\u1ed9i dung t\u00ecm ki\u1ebfm: {1}\n", new Object[]{username, jTextField_TimKiemBox_searchString.getText()});
    }//GEN-LAST:event_btn_TimKiemBox_searchActionPerformed

    private void btn_ChiTietBox_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ChiTietBox_closeActionPerformed
        // TODO add your handling code here:
        animation_OpenDialog();
        this.setLocation(Setting.SettingUI.mainScreen_Location_Center);
    }//GEN-LAST:event_btn_ChiTietBox_closeActionPerformed

    private void jTable1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseDragged
        // TODO add your handling code here:
        dialog_setText();
    }//GEN-LAST:event_jTable1MouseDragged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        dialog_setText();
    }//GEN-LAST:event_jTable1MouseClicked

    private void btn_ChoXuLyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ChoXuLyActionPerformed
        // TODO add your handling code here:
        close_Dialog();
        this.setLocation(Setting.SettingUI.mainScreen_Location_Center);
        btn_ChoXuLy.setBackground(Setting.SettingUI.btn_colorChange);
        show_option="choxuly";
        load_Table();

    }//GEN-LAST:event_btn_ChoXuLyActionPerformed

    private void btn_HoaDonMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HoaDonMuonActionPerformed
        // TODO add your handling code here:
        close_Dialog();
        this.setLocation(Setting.SettingUI.mainScreen_Location_Center);
        btn_HoaDonMuon.setBackground(Setting.SettingUI.btn_colorChange);
        show_option="hoadonmuon";
        load_Table();

    }//GEN-LAST:event_btn_HoaDonMuonActionPerformed

    private void btn_HoaDonHoanThanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HoaDonHoanThanhActionPerformed
        // TODO add your handling code here:
        close_Dialog();
        this.setLocation(Setting.SettingUI.mainScreen_Location_Center);
        btn_HoaDonHoanThanh.setBackground(Setting.SettingUI.btn_colorChange);
        show_option="hoadonhoanthanh";
        load_Table();

    }//GEN-LAST:event_btn_HoaDonHoanThanhActionPerformed

    private void btn_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaActionPerformed
        // TODO add your handling code here:
        close_Dialog();
        this.setLocation(Setting.SettingUI.mainScreen_Location_Center);
        btn_Xoa.setBackground(Setting.SettingUI.btn_colorChange);
        dialog_Opened="xoa";
        if( jTable1.getSelectedRowCount()==1)
        {
            tbModel=(DefaultTableModel)jTable1.getModel();
            String id=(String)tbModel.getValueAt(jTable1.getSelectedRow(), 0);
            String masach=(String)tbModel.getValueAt(jTable1.getSelectedRow(), 2);
            String ngaytra=(String)tbModel.getValueAt(jTable1.getSelectedRow(), 5);
            int choice =JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa hóa đơn "+id +"- "+masach+" ?", "Xác nhận xóa",2);
            if(choice==0){
                if(show_option.equals("choxuly")||show_option.equals("hoadontra")||show_option.equals("hoadonhoanthanh")){
                    dbqr.ExcuQuery_Delete("HOADONTRA","Id="+id+" and Masach='"+masach+"' and Ngaytra='"+ngaytra+"'");
                    JOptionPane.showMessageDialog(null, "Xóa thành công!","Thông báo",1);
                    load_Table();
                    logger.log(Level.INFO, "Người dùng "+username+ " \u0111\u00e3 x\u00f3a h\u00f3a \u0111\u01a1n tr\u1ea3 id: {0}\n", id);
                }
                if(show_option.equals("hoadonmuon")){
                    dbqr.ExcuQuery_Delete("HOADONMUON","Id="+id+" and Masach='"+masach+"'");
                    JOptionPane.showMessageDialog(null, "Xóa thành công!","Thông báo",1);
                    load_Table();
                    logger.log(Level.INFO, "Người dùng "+username+ " \u0111\u00e3 x\u00f3a h\u00f3a \u0111\u01a1n m\u01b0\u1ee3n id: {0}\n", id);
                }
            }

        }
        else JOptionPane.showMessageDialog(null, "Chọn dòng để xóa!","Thông báo",2);
    }//GEN-LAST:event_btn_XoaActionPerformed

    private void btn_CapNhat_CapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapNhat_CapNhatActionPerformed
        // TODO add your handling code here:
        tbModel = (DefaultTableModel) jTable1.getModel();
        String id=(String) tbModel.getValueAt(jTable1.getSelectedRow(), 0);
        String masach=(String) tbModel.getValueAt(jTable1.getSelectedRow(), 2);
        String today= LocalDate.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
        int updateState;
        if(show_option.equals("hoadonmuon"))
       {
           if(jToggleButton1.isSelected())
           {
               updateState=1;
           }
           else
               updateState=0;
           dbqr.ExcuQuery_Update("HOADONMUON", "Trangthaihoadon="+updateState,"Id="+id+" and Ngaymuon='"+today+"'");
       }
       else{
           if(jToggleButton1.isSelected())
           {
               updateState=1;
           }
           else
               updateState=0;
           ResultSet nv=dbqr.ExcuQuery_GetRow("NHANVIEN","Username='"+username+"'");
           String nhanvien_id="null";
           try {
                nv.next();
                nhanvien_id="'"+nv.getString(1)+"'";
            } catch (SQLException ex) {
                Logger.getLogger(QuanLyHoaDon.class.getName()).log(Level.SEVERE, null, ex);
            }
           dbqr.ExcuQuery_Update("HOADONTRA", "Trangthaithanhtoan="+updateState+","
                                                   + "nhanvien_id="+nhanvien_id+"","Id="+id+" and Ngaytra='"+today+"'");
       }
        JOptionPane.showMessageDialog(null, "Cập Nhật thành công!","Thông báo",1);
        logger.log(Level.INFO, "Người dùng "+username+ " \u0111\u00e3 c\u1eadp nh\u1eadt h\u00f3a \u0111\u01a1n {0}\n", id);
        load_Table();
    }//GEN-LAST:event_btn_CapNhat_CapNhatActionPerformed

    private void btn_CapNhat_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapNhat_closeActionPerformed
        // TODO add your handling code here:
        animation_OpenDialog();
        this.setLocation(Setting.SettingUI.mainScreen_Location_Center);
    }//GEN-LAST:event_btn_CapNhat_closeActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        tbModel = (DefaultTableModel) jTable1.getModel();
        String id=(String) tbModel.getValueAt(jTable1.getSelectedRow(), 0);
        if(jToggleButton1.isSelected())
        {
            if(show_option.equals("hoadonmuon")){
                ResultSet hdm=dbqr.ExcuQuery_GetRow("HOADONMUON m", """
                                                                 NOT EXISTS(select *
                                                                 from HOADONTRA  t
                                                                 where m.Id=t.Id and m.Masach=t.Masach and Trangthaihoanthanh=1)
                                                                 and m.Id="""+id+" and m.Trangthaihoadon=0");
                int tienthanhtoan=0;
                try {
                    while(hdm.next()){
                        tienthanhtoan+=(int)hdm.getFloat(6);
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(QuanLyHoaDon.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null,"Số tiền thanh toán: "+tienthanhtoan+"VNĐ","Thông báo",1);
            }
            else{
                ResultSet hdt=dbqr.ExcuQuery_GetRow("HOADONTRA", "Id="+id+" and Trangthaithanhtoan=0");
                int tienconlai=0;
                try {
                    while(hdt.next()){
                        tienconlai+=(int)hdt.getFloat(4);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(QuanLyHoaDon.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null,"Số tiền còn lại: "+tienconlai+"VNĐ","Thông báo",1); 
            }
           jToggleButton1.setText("Đã Thanh Toán");
        }
        else jToggleButton1.setText("Chưa Thanh Toán");
    }//GEN-LAST:event_jToggleButton1ActionPerformed

   private void dialog_setText() {
       tbModel = (DefaultTableModel) jTable1.getModel();
       String id,masach;
       if (jTable1.getSelectedRowCount() == 1) {
           id=(String) tbModel.getValueAt(jTable1.getSelectedRow(), 0);
           masach=(String) tbModel.getValueAt(jTable1.getSelectedRow(), 2);
           String ngaytra=(String) tbModel.getValueAt(jTable1.getSelectedRow(), 5);
           try {
               ResultSet hdm=dbqr.ExcuQuery_GetRow("HOADONMUON", "Id= "+id+" and Masach='"+masach+"'");
               hdm.next();
               ResultSet hdt; 
               ResultSet sach=dbqr.ExcuQuery_GetRow("SACH", "Masach= '"+hdm.getString(3)+"'"); 
               sach.next();
               ResultSet kh=dbqr.ExcuQuery_GetRow("KHACHHANG", "SDT= '"+hdm.getString(2)+"'"); 
               kh.next();
               //Dialog Cập nhật
               if(show_option.equals("hoadonmuon"))
               {
                   jLabel6.setText("Trạng Thái Hóa Đơn Id:"+id);
                   int stateHD=hdm.getInt(9);
                   if(stateHD==0){
                        jToggleButton1.setSelected(false);
                        jToggleButton1.setText("Chưa Thanh Toán");
                   }
                   else {
                       jToggleButton1.setSelected(true);
                       jToggleButton1.setText("Đã Thanh Toán");
                   }
               }
               else{
                   jLabel6.setText("Trạng Thái Thanh Toán Id:"+id);
                   hdt=dbqr.ExcuQuery_GetRow("HOADONTRA", "Id= "+hdm.getInt(1)+"and Masach='"+hdm.getString(3)+"' and Ngaytra='"+ngaytra+"'");
                   hdt.next();
                   int stateHD=hdt.getInt(8);
                   if(stateHD==0)
                   {
                       jToggleButton1.setSelected(false);
                       jToggleButton1.setText("Chưa Thanh Toán");
                   }
                   else {
                       jToggleButton1.setSelected(true);
                       jToggleButton1.setText("Đã Thanh Toán");
                   }
               }
               // Dialog chi tiết
               hdt=dbqr.ExcuQuery_GetRow("HOADONTRA", "Id= "+hdm.getInt(1)+" and Masach='"+hdm.getString(3)+"' and Ngaytra='"+ngaytra+"'"); 
               jLabel_ChiTietBox_Id.setText(id+"-"+masach);
               jTextPane_ChiTietBox_Sach.setText("Mã Sách: "+sach.getString(1)+"\nTên Sách: " + sach.getString(3) + "\n"
                       + "Tên Tác Giả: " + sach.getString(4) + "\n" + "Nhà Xuất Bản: " + sach.getString(5)
                       + "\n" + "Giá Sách: " + String.valueOf((int) sach.getFloat(10)));

               String state =hdm.getInt(9)==0 ? "Chưa Thanh Toán":"Đã Thanh Toán";
               jTextPane_ChiTietBox_HDMuon.setText("Số Lượng Thuê: "+hdm.getInt(4)+"\nGiá Thuê: " + String.valueOf((int) hdm.getFloat(5)) + "\n"
                       + "Tiền Thanh Toán: " + String.valueOf((int) hdm.getFloat(6)) + "\n" + "Ngày Mượn Sách: " + hdm.getString(7)
                       + "\n" + "Ngày Hẹn Trả Sách: " + hdm.getString(8)+ "\n" 
                       + "Trạng Thái Hóa Đơn: " + state);

               jTextPane_ChiTietBox_KhachHang.setText("Số Điện Thoại: "+kh.getString(1)+"\nHọ Tên: " + kh.getString(2) + "\n"
                       + "Tuổi: " + kh.getInt(3));
               if(hdt.next())
               {
                   ResultSet nv=dbqr.ExcuQuery_GetRow("NHANVIEN", "Id= '"+hdt.getString(3)+"'");
                   if(nv.next()){
                       jTextPane_ChiTietBox_NhanVien.setText("Nhân Viên Thực Hiện: " + nv.getString(1)
                       + "\n" + "Họ Tên: " + nv.getString(3) 
                       + "\n" + "Số Điện Thoại: " + nv.getString(4));
                   }
                   else jTextPane_ChiTietBox_NhanVien.setText("Đang Chờ Xử Lý");
                   state= hdt.getInt(8)== 1 ? "Đã Thanh Toán" : "Chưa Thanh Toán";
                   String stateHT=hdt.getInt(7)== 1 ? "Đã Hoàn Thành" : "Chưa Hoàn Thành";
                   jTextPane_ChiTietBox_HDTra.setText("Số Lượng Trả: " + hdt.getInt(5)
                       + "\n" + "Số Tiền Còn Lại: " + String.valueOf((int) hdt.getFloat(4))
                       + "\n" + "Ngày Trả Sách: " + hdt.getString(6) 
                       + "\n" + "Trạng Thái Hoàn Thành: " + stateHT
                       + "\n" + "Trạng Thái Thanh Toán: " + state);
               }
               else{
                    jTextPane_ChiTietBox_NhanVien.setText("Đang Chờ Xử Lý");
                    jTextPane_ChiTietBox_HDTra.setText("Khách Chưa Trả Sách");
               }

           } catch (SQLException ex) {
               Logger.getLogger(QuanLyHoaDon.class.getName()).log(Level.SEVERE, null, ex);
           }
       }
   }

   private void close_Dialog() {
       if (dialog_Opened.equals("timkiem")) {
           jFrame_TimKiem_dialog.setVisible(false);  
           btn_TimKiem.setBackground(Setting.SettingUI.btn_colorDefault);
       }
       if (dialog_Opened.equals("capnhat")) {
           jFrame_CapNhat_dialog.dispose(); 
           btn_CapNhat.setBackground(Setting.SettingUI.btn_colorDefault);
       }
       if (dialog_Opened.equals("chitiet")) {
           jFrame_ChiTiet_dialog.setVisible(false);
           btn_ChiTiet.setBackground(Setting.SettingUI.btn_colorDefault);
       }
       if (dialog_Opened.equals("xoa")) {
           btn_Xoa.setBackground(Setting.SettingUI.btn_colorDefault);    
       }
       if (show_option.equals("hoadontra")) {
           btn_HoaDonTra.setBackground(Setting.SettingUI.btn_colorDefault);
       }

       if (show_option.equals("choxuly")) {
           btn_ChoXuLy.setBackground(Setting.SettingUI.btn_colorDefault);
       }
       if (show_option.equals("hoadonhoanthanh")) {
           btn_HoaDonHoanThanh.setBackground(Setting.SettingUI.btn_colorDefault);    
       }
       if (show_option.equals("hoadonmuon")) {
           btn_HoaDonMuon.setBackground(Setting.SettingUI.btn_colorDefault);    
       }
   }

    
    /**
    * Thực hiện hiệu ứng mở hộp thoại bằng cách đặt vị trí và đóng hộp thoại hiện tại.
    * Điều này có thể kết hợp với một hiệu ứng mở rộng khác để tạo hiệu ứng mở hộp thoại.
    */
    private void animation_OpenDialog() {
       this.setLocation(Setting.SettingUI.mainScreen_Location_Left); // Đặt vị trí của hộp thoại mới
       close_Dialog(); // Đóng hộp thoại hiện tại 
    }  
    
   
   
   
   /**
    * Thiết lập quyền truy cập và hiển thị các thành phần giao diện dựa trên vai trò người dùng.
    * 
    * @param Role Vai trò của người dùng ("Nhân Viên", "Quản Lý", hoặc "Khách Hàng").
    */
   private void setRole(String Role) {
        switch (Role) {
            case "Nhân Viên" -> {
                 btn_Xoa.setVisible(false); // Ẩn nút xóa
            }
            case "Quản Lý" -> {
            }
            case "Khách Hàng" -> {
            }
            default -> {
            }
        }
        // Cài đặt cho vai trò Nhân Viên (có thể thêm các cài đặt khác nếu cần)
        // Cài đặt cho vai trò Quản Lý (có thể thêm các cài đặt khác nếu cần)
           }
   
   
   /**
    * Chuyển đổi các chuỗi mô tả sắp xếp từ giao diện người dùng thành các giá trị tương ứng của truy vấn cơ sở dữ liệu.
    * 
    * @param s Chuỗi mô tả sắp xếp từ giao diện người dùng.
    * @return Giá trị tương ứng của truy vấn cơ sở dữ liệu, hoặc chuỗi rỗng nếu không tìm thấy giá trị phù hợp.
    */
   private String convertToDbString(String s) {
       if (s.equals("Tăng dần")) return "ASC";
       if (s.equals("Giảm dần")) return "DESC";
       if (s.equals("Mã Sách")) return "Masach";
       if (s.equals("SDT Khách Hàng")) return "SDT";
       if (s.equals("Ngày Mượn")) return "Ngaymuon";
       if (s.equals("Ngày Hẹn")) return "Ngayhen";
       if (s.equals("Ngày Trả")) return "Ngaytra";
       if (s.equals("Mã Hóa Đơn")) return "Id";

       return "";
   }

   /**
    * Hiển thị một hộp thoại tùy chọn với các lựa chọn được cung cấp và trả về lựa chọn được chọn.
    * 
    * @param options Mảng các đối tượng đại diện cho các lựa chọn hiển thị trong hộp thoại.
    * @return Số nguyên đại diện cho lựa chọn được chọn từ hộp thoại. 
    *         Nếu không có lựa chọn nào được chọn hoặc hộp thoại bị đóng, trả về giá trị mặc định của JOptionPane.
    */
   private int optionPane(Object[] options) {
        // Hiển thị JOptionPane với các lựa chọn và một thông điệp (hình ảnh có thể thêm vào nếu cần)
        int choice = JOptionPane.showOptionDialog(
                null,
                "Bạn muốn: ",
                "Chọn Chức Năng",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.INFORMATION_MESSAGE,
                null, // Thay "icon.png" bằng đường dẫn của hình ảnh bạn muốn sử dụng
                options,
                options[0]
        );
        return choice;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new QuanLyHoaDon().setVisible(true);
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_CapNhat;
    private javax.swing.JButton btn_CapNhat_CapNhat;
    private javax.swing.JButton btn_CapNhat_close;
    private javax.swing.JButton btn_ChiTiet;
    private javax.swing.JButton btn_ChiTietBox_close;
    private javax.swing.JButton btn_ChoXuLy;
    private javax.swing.JButton btn_HoaDonHoanThanh;
    private javax.swing.JButton btn_HoaDonMuon;
    private javax.swing.JButton btn_HoaDonTra;
    private javax.swing.JButton btn_TimKiem;
    private javax.swing.JButton btn_TimKiemBox_close;
    private javax.swing.JButton btn_TimKiemBox_search;
    private javax.swing.JButton btn_Xoa;
    private javax.swing.JButton btn_back;
    private javax.swing.JComboBox<String> jComboBox_TimKiemBox_item;
    private javax.swing.JFrame jFrame_CapNhat_dialog;
    private javax.swing.JFrame jFrame_ChiTiet_dialog;
    private javax.swing.JFrame jFrame_TimKiem_dialog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel_ChiTietBox_Id;
    private javax.swing.JLabel jLabel_mainTittle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_ChiTietBox;
    private javax.swing.JPanel jPanel_ChucNang_main;
    private javax.swing.JPanel jPanel_TimKiemBox;
    private javax.swing.JPanel jPanel_TimKiemBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane_ChiTietBox_Content;
    private javax.swing.JScrollPane jScrollPane_ChiTietBox_Content1;
    private javax.swing.JScrollPane jScrollPane_ChiTietBox_Content2;
    private javax.swing.JScrollPane jScrollPane_ChiTietBox_Content3;
    private javax.swing.JScrollPane jScrollPane_ChiTietBox_Content4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField_TimKiemBox_searchString;
    private javax.swing.JTextPane jTextPane_ChiTietBox_HDMuon;
    private javax.swing.JTextPane jTextPane_ChiTietBox_HDTra;
    private javax.swing.JTextPane jTextPane_ChiTietBox_KhachHang;
    private javax.swing.JTextPane jTextPane_ChiTietBox_NhanVien;
    private javax.swing.JTextPane jTextPane_ChiTietBox_Sach;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

    private Image Image(ImageIcon img_bookIcon) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
